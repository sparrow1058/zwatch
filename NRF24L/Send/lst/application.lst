C51 COMPILER V9.05   APPLICATION                                                           08/03/2016 19:45:46 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE APPLICATION
OBJECT MODULE PLACED IN .\build\application.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE application.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\application.lst) 
                    -OBJECT(.\build\application.obj)

line level    source

   1          /* Copyright (c) 2008 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is confidential property of Nordic 
   4           * Semiconductor. The use, copying, transfer or disclosure of such information 
   5           * is prohibited except by express written agreement with Nordic Semiconductor.
   6           *
   7           * $LastChangedRevision:$
   8           */
   9          
  10          /** @file
  11           *
  12           * The nRF24LE1 example application.
  13           *
  14           * @author Rune Brandsegg
  15           * @author Ivar C. OEsthus
  16           *
  17           */
  18          
  19          #include "hal_nrf.h"
  20          #include "system.h"
  21          #include "radio.h"
  22          #include "application.h"
  23          
  24          #include <stdint.h>
  25          #define TIME_MAX        250
  26          
  27          volatile uint8_t        gnUartData;
  28          uint8_t xdata packet[RADIO_MAX_PL];     // Buffer for sending or receiving
  29                                                  // packet.
  30          void transmitter_mode(void)
  31          {
  32   1        unsigned char nI = 0;
  33   1        LED2 = OFF;                           // LED2 blank, indicates PTX mode
  34   1        while(true)
  35   1        {
  36   2          while(radio_busy());                 // Wait until radio ready
  37   2      
  38   2              send_packet(CMD1);
  39   2      
  40   2              for(nI=0;nI<100;nI++)
  41   2              {
  42   3                      delay_10ms();
  43   3                      delay_10ms();
  44   3              //      delay_10ms();
  45   3              //      delay_10ms(); delay_10ms();        delay_10ms();
  46   3              }
  47   2              LED2 =!LED2;
  48   2              
  49   2      
  50   2              /*
  51   2          if(!B0)
  52   2          {
  53   2            send_packet(CMD1);
  54   2            while(!B0)
C51 COMPILER V9.05   APPLICATION                                                           08/03/2016 19:45:46 PAGE 2   

  55   2              ;                               // Wait until B0 relesed...
  56   2          }
  57   2          if(!B1)
  58   2          {
  59   2            send_packet(CMD2);
  60   2            while(!B1)
  61   2              ;                               // Wait until B1 relesed...
  62   2          }
  63   2              */
  64   2        }
  65   1      }
  66          void receiver_mode(void)
  67          {
  68   1        uint8_t command;
  69   1        uint8_t time_delay;                           // LED2 lit, indicates PRX mode
  70   1        uint8_t lost_flag=0;
  71   1        while(true)
  72   1        {
  73   2          if(radio_data_received())
  74   2          {
  75   3            command = read_packet();
  76   3            switch(command)
  77   3            {
  78   4              case CMD1:                      // "Link-packet" received
  79   4                //LED0_BLINK();
  80   4                        time_delay=0;
  81   4                LED0=0;
  82   4                        break;
  83   4      
  84   4              case CMD2:                      // "Boot message packet" received
  85   4                boot_mess();                  // Show boot message
  86   4                LED2 = ON;
  87   4                break;
  88   4      
  89   4              default:
  90   4                break;
  91   4            }
  92   3          }
  93   2              if(time_delay++>TIME_MAX)
  94   2              {
  95   3                      LED0=1;
  96   3                      
  97   3              }
  98   2        }
  99   1      }
 100          
 101          void send_packet(uint8_t command)
 102          {
 103   1        bool packet_sent;
 104   1        uint8_t data_length;
 105   1      
 106   1        LED0 = ON;                            // Trans.; flash LED1...
 107   1      
 108   1        /* Assemble packet  */
 109   1        packet[0] = CMD_SEND_DATA;            // Add TYPE (data = 0x00)
 110   1        packet[1] = data_length = 1;          // Add LENGTH (1 byte)
 111   1        packet[DATA_POS] = command;           // Add DATA to send
 112   1      
 113   1        /* 
 114   1           .... Room for encryption of message .... 
 115   1                                                    */
 116   1      
C51 COMPILER V9.05   APPLICATION                                                           08/03/2016 19:45:46 PAGE 3   

 117   1        /* Send packet with radio */
 118   1        radio_send_packet(packet, data_length+DATA_POS);
 119   1      
 120   1        /* Wait for respons from radio, TX_DS or MAX_RT */
 121   1        while(radio_busy())
 122   1          ;
 123   1      
 124   1        packet_sent = radio_packet_sent();
 125   1      
 126   1        if(packet_sent)
 127   1        {
 128   2          LED1_BLINK();                       // Packet sent, flash LED1
 129   2        }
 130   1        else
 131   1        {
 132   2          LED2_BLINK();                       // Packet lost, flash LED2
 133   2        }
 134   1        LED0 = OFF;
 135   1      }
 136          
 137          uint8_t read_packet(void)
 138          {
 139   1        uint8_t command, data_length,type, pck_length;
 140   1      
 141   1        /* Get the packet     from radio */
 142   1        pck_length = radio_read_data(packet);
 143   1      
 144   1        /* Disassemble packet */
 145   1        type        =  packet[0];             // Get TYPE of message
 146   1        data_length =  packet[1];             // Get LENGTH of data part
 147   1      
 148   1        /* .... Room for decryption of message .... */
 149   1      
 150   1        command = packet[DATA_POS];           // Get the received command
 151   1        return command;
 152   1      }
 153          
 154          void radio_irq(void) interrupt RF_READY_INT_VECT  
 155          {
 156   1        radio_interrupt();  
 157   1      }
 158          
 159          
 160          //---------------------------------------------------------------------------
 161          void ri0_interrupt(void) interrupt INTERRUPT_UART        
 162          {       
 163   1              if (RI0 == 1)
 164   1              {
 165   2              RI0 = 0;         
 166   2                      gnUartData = S0BUF; 
 167   2                      S0BUF = gnUartData;                                                             
 168   2              }
 169   1              else if(TI0 == 1)
 170   1              {
 171   2                      TI0 = 0;                        
 172   2              }
 173   1      }
 174          
 175          //---------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.05   APPLICATION                                                           08/03/2016 19:45:46 PAGE 4   

   CODE SIZE        =    289    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     33       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
