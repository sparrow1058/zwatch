C51 COMPILER V9.05   APPLICATION                                                           08/12/2016 18:44:23 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE APPLICATION
OBJECT MODULE PLACED IN .\build\application.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE application.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\application.lst) 
                    -OBJECT(.\build\application.obj)

line level    source

   1          /* Copyright (c) 2008 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is confidential property of Nordic 
   4           * Semiconductor. The use, copying, transfer or disclosure of such information 
   5           * is prohibited except by express written agreement with Nordic Semiconductor.
   6           *
   7           * $LastChangedRevision:$
   8           */
   9          
  10          /** @file
  11           *
  12           * The nRF24LE1 example application.
  13           *
  14           * @author Rune Brandsegg
  15           * @author Ivar C. OEsthus
  16           *
  17           */
  18          
  19          #include "hal_nrf.h"
  20          #include "system.h"
  21          #include "radio.h"
  22          #include "application.h"
  23          
  24          #include <stdint.h>
  25          
  26          
  27          #define LED_DELAY       100
  28          volatile uint8_t        gnUartData;
  29          uint8_t xdata packet[RADIO_MAX_PL];     // Buffer for sending or receiving
  30                                                  // packet.
  31          void transmitter_mode(void)
  32          {
  33   1        LED2 = OFF;                           // LED2 blank, indicates PTX mode
  34   1        while(true)
  35   1        {
  36   2          while(radio_busy())                 // Wait until radio ready
  37   2            ;
  38   2      
  39   2          if(!B0)
  40   2          {
  41   3            send_packet(CMD1);
  42   3            while(!B0)
  43   3              ;                               // Wait until B0 relesed...
  44   3          }
  45   2          if(!B1)
  46   2          {
  47   3            send_packet(CMD2);
  48   3            while(!B1)
  49   3              ;                               // Wait until B1 relesed...
  50   3          }
  51   2        }
  52   1      }
  53          void receiver_mode(void)
  54          {
C51 COMPILER V9.05   APPLICATION                                                           08/12/2016 18:44:23 PAGE 2   

  55   1        uint8_t command;
  56   1        uint8_t time_delay=0;
  57   1        LED2 = ON;                            // LED2 lit, indicates PRX mode
  58   1       LED0_OFF;
  59   1        while(true)
  60   1        {
  61   2          if(radio_data_received())
  62   2          {
  63   3            command = read_packet();
  64   3            switch(command)
  65   3            {
  66   4              case CMD1:                      // "Link-packet" received
  67   4               // LED0_BLINK();
  68   4                //LED0=!LED0;
  69   4                        time_delay=0;
  70   4                        LED0_ON;
  71   4                        break;
  72   4      
  73   4              case CMD2:                      // "Boot message packet" received
  74   4                boot_mess();                  // Show boot message
  75   4                LED2 = ON;
  76   4                break;
  77   4      
  78   4              default:
  79   4                break;
  80   4            }
  81   3          }
  82   2      //      LED0_ON;
  83   2      //      delay_10ms();
  84   2              delay_10ms();
  85   2              delay_10ms();
  86   2      //      LED0=!LED0;
  87   2              if(time_delay++>LED_DELAY)
  88   2              {
  89   3                      LED0_OFF;
  90   3      
  91   3                      time_delay=0;
  92   3              }
  93   2        }
  94   1      }
  95          
  96          void send_packet(uint8_t command)
  97          {
  98   1        bool packet_sent;
  99   1        uint8_t data_length;
 100   1      
 101   1        LED0 = ON;                            // Trans.; flash LED1...
 102   1      
 103   1        /* Assemble packet  */
 104   1        packet[0] = CMD_SEND_DATA;            // Add TYPE (data = 0x00)
 105   1        packet[1] = data_length = 1;          // Add LENGTH (1 byte)
 106   1        packet[DATA_POS] = command;           // Add DATA to send
 107   1      
 108   1        /* 
 109   1           .... Room for encryption of message .... 
 110   1                                                    */
 111   1      
 112   1        /* Send packet with radio */
 113   1        radio_send_packet(packet, data_length+DATA_POS);
 114   1      
 115   1        /* Wait for respons from radio, TX_DS or MAX_RT */
 116   1        while(radio_busy())
C51 COMPILER V9.05   APPLICATION                                                           08/12/2016 18:44:23 PAGE 3   

 117   1          ;
 118   1      
 119   1        packet_sent = radio_packet_sent();
 120   1      
 121   1        if(packet_sent)
 122   1        {
 123   2          LED1_BLINK();                       // Packet sent, flash LED1
 124   2        }
 125   1        else
 126   1        {
 127   2          LED2_BLINK();                       // Packet lost, flash LED2
 128   2        }
 129   1        LED0 = OFF;
 130   1      }
 131          
 132          uint8_t read_packet(void)
 133          {
 134   1        uint8_t command, data_length,type, pck_length;
 135   1      
 136   1        /* Get the packet     from radio */
 137   1        pck_length = radio_read_data(packet);
 138   1      
 139   1        /* Disassemble packet */
 140   1        type        =  packet[0];             // Get TYPE of message
 141   1        data_length =  packet[1];             // Get LENGTH of data part
 142   1      
 143   1        /* .... Room for decryption of message .... */
 144   1      
 145   1        command = packet[DATA_POS];           // Get the received command
 146   1        return command;
 147   1      }
 148          
 149          void radio_irq(void) interrupt RF_READY_INT_VECT  
 150          {
 151   1        radio_interrupt();  
 152   1      }
 153          
 154          
 155          
 156          //---------------------------------------------------------------------------
 157          void ri0_interrupt(void) interrupt INTERRUPT_UART        
 158          {       
 159   1              if (RI0 == 1)
 160   1              {
 161   2              RI0 = 0;         
 162   2                      gnUartData = S0BUF; 
 163   2                      S0BUF = gnUartData;                                                             
 164   2              }
 165   1              else if(TI0 == 1)
 166   1              {
 167   2                      TI0 = 0;                        
 168   2              }
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    288    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     33       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.05   APPLICATION                                                           08/12/2016 18:44:23 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
